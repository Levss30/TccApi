// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TccApi.Data;

#nullable disable

namespace TccApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231108213920_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TccApi.Models.Agendamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EstabelecimentoId")
                        .HasColumnType("bigint");

                    b.Property<int>("FormasDePagamento")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora_ag")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local_ag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("data_ag")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Agendamentos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EstabelecimentoId = 1L,
                            FormasDePagamento = 0,
                            Hora_ag = new DateTime(2023, 11, 8, 18, 39, 20, 299, DateTimeKind.Local).AddTicks(880),
                            Local_ag = "Av. Ramiz Galvão",
                            UsuarioId = 1L,
                            data_ag = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("TccApi.Models.Estabelecimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Complemento")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_est")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_est")
                        .HasColumnType("int");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Estabelecimentos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CEP = 2223001,
                            Cnpj = "12123456/0001-12",
                            Complemento = 4,
                            Endereco = "Av. Ramiz Galvão",
                            Nome_est = "CutsCuts",
                            Numero_est = 1082,
                            TipoUsuario = 1,
                            UsuarioId = 1L
                        });
                });

            modelBuilder.Entity("TccApi.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Senha_hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Senha_salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cpf = 50023022232L,
                            Email = "Agatha.linhares@gmail.com",
                            Nome = "Agatha",
                            Senha_hash = new byte[] { 10, 226, 60, 110, 184, 81, 138, 12, 138, 157, 211, 146, 8, 116, 138, 164, 16, 140, 2, 198, 201, 176, 133, 64, 182, 44, 208, 199, 178, 9, 37, 194, 54, 255, 72, 86, 36, 140, 6, 40, 109, 76, 236, 253, 61, 243, 27, 21, 202, 201, 195, 187, 188, 1, 235, 251, 243, 35, 197, 61, 0, 168, 116, 121 },
                            Senha_salt = new byte[] { 165, 229, 165, 147, 86, 48, 180, 211, 157, 86, 120, 167, 54, 253, 109, 66, 164, 37, 190, 44, 238, 106, 24, 96, 231, 243, 198, 127, 113, 129, 104, 52, 64, 251, 217, 238, 90, 134, 238, 247, 194, 108, 40, 187, 182, 223, 203, 22, 247, 214, 13, 31, 194, 84, 220, 28, 173, 44, 73, 124, 190, 148, 174, 51, 167, 30, 72, 68, 150, 140, 14, 66, 114, 91, 85, 82, 156, 103, 25, 107, 109, 218, 178, 16, 197, 134, 52, 125, 93, 84, 251, 19, 86, 10, 244, 192, 230, 196, 167, 101, 155, 80, 236, 240, 205, 107, 252, 44, 232, 219, 105, 251, 36, 183, 191, 171, 23, 131, 139, 246, 54, 7, 255, 22, 133, 65, 245, 152 },
                            TipoUsuario = 0
                        });
                });

            modelBuilder.Entity("TccApi.Models.Agendamento", b =>
                {
                    b.HasOne("TccApi.Models.Estabelecimento", "Estabelecimentos")
                        .WithMany("Agendamentos")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TccApi.Models.Usuario", "Usuario")
                        .WithMany("Agendamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estabelecimentos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TccApi.Models.Estabelecimento", b =>
                {
                    b.HasOne("TccApi.Models.Usuario", "Usuario")
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TccApi.Models.Estabelecimento", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("TccApi.Models.Usuario", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Estabelecimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
